##### If we ever need composer, adding it is easy:

#FROM composer AS composer

#COPY composer.json /app/
#COPY composer.lock /app/


#RUN composer install \
#  --no-dev \
#  --optimize-autoloader \
#  --no-interaction \
#  --no-progress \
#  --ignore-platform-reqs

# Based on https://github.com/TrafeX/docker-php-nginx which is MIT licensed.

FROM alpine:latest

RUN apk --no-cache add \
  curl \
  nginx \
  php8 \
  php8-ctype \
  php8-curl \
#  php8-dom \
  php8-fpm \
  php8-gd \
#  php8-intl \
#  php8-json \
  php8-mbstring \
  php8-mysqli \
  php8-opcache \
  php8-openssl \
#  php8-phar \
#  php8-session \
  php8-xml \
  php8-xmlreader \
	php8-simplexml \
#  php8-zlib \
  supervisor

RUN ln -s /usr/bin/php8 /usr/bin/php

RUN mkdir -p /var/www/html
RUN mkdir -p /var/www/storage

#COPY --from=composer /app/vendor /var/www/html/vendor
#COPY src/ /var/www/html

# Configuration
COPY config/nginx.conf /etc/nginx/nginx.conf
COPY config/fpm-pool.conf /etc/php8/php-fpm.d/www.conf
COPY config/php.ini /etc/php8/conf.d/custom.ini
COPY config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Make sure files/folders needed by the processes are accessable when they run under the nobody user
RUN chown -R nobody.nobody /var/www/html && \
  chown -R nobody.nobody /run && \
  chown -R nobody.nobody /var/lib/nginx && \
  chown -R nobody.nobody /var/log/nginx

USER nobody

# Add application
WORKDIR /var/www/html

# Expose the port nginx is reachable on
EXPOSE 8080

# Let supervisord start nginx & php-fpm
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]

# Configure a healthcheck to validate that everything is up&running
HEALTHCHECK --timeout=10s CMD curl --silent --fail http://127.0.0.1:8080/fpm-ping
